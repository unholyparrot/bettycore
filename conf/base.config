/*
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *     OBTAINED FROM nf-core/mag Nextflow base config file AND MODIFIED AS I NEED
 *     ACTUALLY I'VE DELETED LOTS OF STUFF OTHERWISE THAT SHIT DOESN'T WORK
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *     A 'blank slate' config file, appropriate for general use on most high performance
 *     compute environments. Assumes that all software is installed and available on
 *     the PATH. Runs in `local` mode - all jobs will be run on the logged in environment.
 * ----------------------------------------------------------------------------------------
*/

process {

    cpus   = { 1    * task.attempt}
    memory = { 7.GB * task.attempt}
    time   = { 4.h  * task.attempt}

    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 3
    maxErrors     = '-1'

    // Process-specific resource requirements
    // NOTE - Please try and re-use the labels below as much as possible.
    //        These labels are used and recognized by default in DSL2 files hosted on nf-core/modules.
    //        If possible, it would be nice to keep the same label naming convention when
    //        adding in your local modules too.
    // See https://www.nextflow.io/docs/latest/config.html#config-process-selectors
    
    withLabel:'process_single' {
        cpus   = { 1 }
        memory = { 6.GB * task.attempt }
        time   = { 4.h  * task.attempt }
    }
    withLabel:'process_medium' {
        cpus   = { 6     * task.attempt  }
        memory = { 36.GB * task.attempt }
        time   = { 8.h   * task.attempt }
    }
    withLabel:'kraken2_mem_map' {
        cpus   = { 80  }
        memory = { 100.GB }
        time   = { 8.h   * task.attempt }
    }
    withName:CUSTOM_DUMPSOFTWAREVERSIONS {
        cache = false
    }
    withName: SPADES_UNCLASSIFIED {
        cpus          = { 20               * task.attempt }
        memory        = { 64.GB            * task.attempt }
        time          = { 24.h             * task.attempt }
        maxRetries    = 5
    }
    withName: PARSE_KRAKEN2_AND_REQUEST {
        cpus = {8}
    }
}
